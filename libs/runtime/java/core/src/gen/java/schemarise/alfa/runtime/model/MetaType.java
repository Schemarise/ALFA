// *********************************************************************************************************
//      DO NOT EDIT. This file has been generated by the Schemarise Alfa toolset. See
// www.schemarise.com
// *********************************************************************************************************
package schemarise.alfa.runtime.model;

@javax.annotation.Generated("com.schemarise.alfa.generators.exporters.java.Java8Exporter")
public enum MetaType implements com.schemarise.alfa.runtime.Enum {
    Entity("Entity", java.util.Optional.empty()),
    Key("Key", java.util.Optional.empty()),
    Trait("Trait", java.util.Optional.empty()),
    Union("Union", java.util.Optional.empty()),
    Record("Record", java.util.Optional.empty()),
    Enum("Enum", java.util.Optional.empty()),
    Udt("Udt", java.util.Optional.empty()),
    Service("Service", java.util.Optional.empty()),
    Annotation("Annotation", java.util.Optional.empty()),
    EntityName("EntityName", java.util.Optional.empty()),
    KeyName("KeyName", java.util.Optional.empty()),
    TraitName("TraitName", java.util.Optional.empty()),
    UnionName("UnionName", java.util.Optional.empty()),
    RecordName("RecordName", java.util.Optional.empty()),
    EnumName("EnumName", java.util.Optional.empty()),
    UdtName("UdtName", java.util.Optional.empty()),
    ServiceName("ServiceName", java.util.Optional.empty()),
    FieldName("FieldName", java.util.Optional.empty());

    private final java.lang.String value;
    private final java.util.Optional<java.lang.String> lexical;

    private static java.util.Map<java.lang.String, MetaType> mappings;

    MetaType(java.lang.String v, java.util.Optional<java.lang.String> lex) {
        value = v;
        lexical = lex;
    }

    public static MetaType fromValue(java.lang.String v) {
        if (mappings == null) {
            java.util.Map<java.lang.String, MetaType> m = new java.util.HashMap<>();
            for (MetaType c : MetaType.values()) {
                m.put(c.value, c);
            }
            mappings = m;
        }

        return mappings.get(v);
    }

    public java.util.Optional<String> getLexicalValue() {
        return lexical;
    }

    public java.lang.String value() {
        return value;
    }

    public com.schemarise.alfa.runtime.TypeDescriptor descriptor() {
        return schemarise.alfa.runtime.model.MetaType.MetaTypeDescriptor.INSTANCE;
    }

    // <editor-fold defaultstate="collapsed" desc="TypeDescriptor class">

    public static final class MetaTypeDescriptor
            extends com.schemarise.alfa.runtime.utils.DefaultTypeDescriptor {
        public static java.lang.String TYPE_NAME = "schemarise.alfa.runtime.model.MetaType";
        public static schemarise.alfa.runtime.model.MetaType.MetaTypeDescriptor INSTANCE =
                new schemarise.alfa.runtime.model.MetaType.MetaTypeDescriptor();

        private schemarise.alfa.runtime.model.UdtDataType _asUdtType_ =
                schemarise.alfa.runtime.model.UdtDataType.builder()
                        .setUdtType(schemarise.alfa.runtime.model.UdtMetaType.enumType)
                        .setFullyQualifiedName(TYPE_NAME)
                        .build();
        public static final short FIELD_ID_ENTITY = 0;
        public static final String FIELD_ENTITY = "Entity";

        public static final short FIELD_ID_KEY = 1;
        public static final String FIELD_KEY = "Key";

        public static final short FIELD_ID_TRAIT = 2;
        public static final String FIELD_TRAIT = "Trait";

        public static final short FIELD_ID_UNION = 3;
        public static final String FIELD_UNION = "Union";

        public static final short FIELD_ID_RECORD = 4;
        public static final String FIELD_RECORD = "Record";

        public static final short FIELD_ID_ENUM = 5;
        public static final String FIELD_ENUM = "Enum";

        public static final short FIELD_ID_UDT = 6;
        public static final String FIELD_UDT = "Udt";

        public static final short FIELD_ID_SERVICE = 7;
        public static final String FIELD_SERVICE = "Service";

        public static final short FIELD_ID_ANNOTATION = 8;
        public static final String FIELD_ANNOTATION = "Annotation";

        public static final short FIELD_ID_ENTITYNAME = 9;
        public static final String FIELD_ENTITYNAME = "EntityName";

        public static final short FIELD_ID_KEYNAME = 10;
        public static final String FIELD_KEYNAME = "KeyName";

        public static final short FIELD_ID_TRAITNAME = 11;
        public static final String FIELD_TRAITNAME = "TraitName";

        public static final short FIELD_ID_UNIONNAME = 12;
        public static final String FIELD_UNIONNAME = "UnionName";

        public static final short FIELD_ID_RECORDNAME = 13;
        public static final String FIELD_RECORDNAME = "RecordName";

        public static final short FIELD_ID_ENUMNAME = 14;
        public static final String FIELD_ENUMNAME = "EnumName";

        public static final short FIELD_ID_UDTNAME = 15;
        public static final String FIELD_UDTNAME = "UdtName";

        public static final short FIELD_ID_SERVICENAME = 16;
        public static final String FIELD_SERVICENAME = "ServiceName";

        public static final short FIELD_ID_FIELDNAME = 17;
        public static final String FIELD_FIELDNAME = "FieldName";

        private schemarise.alfa.runtime.model.ScalarDataType _entityType =
                schemarise.alfa.runtime.model.ScalarDataType.builder()
                        .setScalarType(schemarise.alfa.runtime.model.ScalarType.voidType)
                        .build();

        private schemarise.alfa.runtime.model.ScalarDataType _keyType =
                schemarise.alfa.runtime.model.ScalarDataType.builder()
                        .setScalarType(schemarise.alfa.runtime.model.ScalarType.voidType)
                        .build();

        private schemarise.alfa.runtime.model.ScalarDataType _traitType =
                schemarise.alfa.runtime.model.ScalarDataType.builder()
                        .setScalarType(schemarise.alfa.runtime.model.ScalarType.voidType)
                        .build();

        private schemarise.alfa.runtime.model.ScalarDataType _unionType =
                schemarise.alfa.runtime.model.ScalarDataType.builder()
                        .setScalarType(schemarise.alfa.runtime.model.ScalarType.voidType)
                        .build();

        private schemarise.alfa.runtime.model.ScalarDataType _recordType =
                schemarise.alfa.runtime.model.ScalarDataType.builder()
                        .setScalarType(schemarise.alfa.runtime.model.ScalarType.voidType)
                        .build();

        private schemarise.alfa.runtime.model.ScalarDataType _enumType =
                schemarise.alfa.runtime.model.ScalarDataType.builder()
                        .setScalarType(schemarise.alfa.runtime.model.ScalarType.voidType)
                        .build();

        private schemarise.alfa.runtime.model.ScalarDataType _udtType =
                schemarise.alfa.runtime.model.ScalarDataType.builder()
                        .setScalarType(schemarise.alfa.runtime.model.ScalarType.voidType)
                        .build();

        private schemarise.alfa.runtime.model.ScalarDataType _serviceType =
                schemarise.alfa.runtime.model.ScalarDataType.builder()
                        .setScalarType(schemarise.alfa.runtime.model.ScalarType.voidType)
                        .build();

        private schemarise.alfa.runtime.model.ScalarDataType _annotationType =
                schemarise.alfa.runtime.model.ScalarDataType.builder()
                        .setScalarType(schemarise.alfa.runtime.model.ScalarType.voidType)
                        .build();

        private schemarise.alfa.runtime.model.ScalarDataType _entityNameType =
                schemarise.alfa.runtime.model.ScalarDataType.builder()
                        .setScalarType(schemarise.alfa.runtime.model.ScalarType.voidType)
                        .build();

        private schemarise.alfa.runtime.model.ScalarDataType _keyNameType =
                schemarise.alfa.runtime.model.ScalarDataType.builder()
                        .setScalarType(schemarise.alfa.runtime.model.ScalarType.voidType)
                        .build();

        private schemarise.alfa.runtime.model.ScalarDataType _traitNameType =
                schemarise.alfa.runtime.model.ScalarDataType.builder()
                        .setScalarType(schemarise.alfa.runtime.model.ScalarType.voidType)
                        .build();

        private schemarise.alfa.runtime.model.ScalarDataType _unionNameType =
                schemarise.alfa.runtime.model.ScalarDataType.builder()
                        .setScalarType(schemarise.alfa.runtime.model.ScalarType.voidType)
                        .build();

        private schemarise.alfa.runtime.model.ScalarDataType _recordNameType =
                schemarise.alfa.runtime.model.ScalarDataType.builder()
                        .setScalarType(schemarise.alfa.runtime.model.ScalarType.voidType)
                        .build();

        private schemarise.alfa.runtime.model.ScalarDataType _enumNameType =
                schemarise.alfa.runtime.model.ScalarDataType.builder()
                        .setScalarType(schemarise.alfa.runtime.model.ScalarType.voidType)
                        .build();

        private schemarise.alfa.runtime.model.ScalarDataType _udtNameType =
                schemarise.alfa.runtime.model.ScalarDataType.builder()
                        .setScalarType(schemarise.alfa.runtime.model.ScalarType.voidType)
                        .build();

        private schemarise.alfa.runtime.model.ScalarDataType _serviceNameType =
                schemarise.alfa.runtime.model.ScalarDataType.builder()
                        .setScalarType(schemarise.alfa.runtime.model.ScalarType.voidType)
                        .build();

        private schemarise.alfa.runtime.model.ScalarDataType _fieldNameType =
                schemarise.alfa.runtime.model.ScalarDataType.builder()
                        .setScalarType(schemarise.alfa.runtime.model.ScalarType.voidType)
                        .build();

        public java.util.Optional<
                        java.util.function.Function<MetaType, java.util.function.Supplier>>
                getFieldSupplier(java.lang.String fieldName) {
            return java.util.Optional.empty();
        }

        public java.util.Optional<
                        java.util.function.BiConsumer<
                                com.schemarise.alfa.runtime.Builder,
                                com.schemarise.alfa.runtime.DataSupplier>>
                getFieldConsumer(java.lang.String fieldName) {
            return java.util.Optional.empty();
        }

        public com.schemarise.alfa.runtime.FieldMeta entityMeta =
                new com.schemarise.alfa.runtime.FieldMeta(
                        java.util.Optional.empty(),
                        java.util.Optional.empty(),
                        java.util.Optional.empty(),
                        java.util.Optional.empty(),
                        _entityType,
                        FIELD_ENTITY,
                        java.util.Optional.empty());
        public com.schemarise.alfa.runtime.FieldMeta keyMeta =
                new com.schemarise.alfa.runtime.FieldMeta(
                        java.util.Optional.empty(),
                        java.util.Optional.empty(),
                        java.util.Optional.empty(),
                        java.util.Optional.empty(),
                        _keyType,
                        FIELD_KEY,
                        java.util.Optional.empty());
        public com.schemarise.alfa.runtime.FieldMeta traitMeta =
                new com.schemarise.alfa.runtime.FieldMeta(
                        java.util.Optional.empty(),
                        java.util.Optional.empty(),
                        java.util.Optional.empty(),
                        java.util.Optional.empty(),
                        _traitType,
                        FIELD_TRAIT,
                        java.util.Optional.empty());
        public com.schemarise.alfa.runtime.FieldMeta unionMeta =
                new com.schemarise.alfa.runtime.FieldMeta(
                        java.util.Optional.empty(),
                        java.util.Optional.empty(),
                        java.util.Optional.empty(),
                        java.util.Optional.empty(),
                        _unionType,
                        FIELD_UNION,
                        java.util.Optional.empty());
        public com.schemarise.alfa.runtime.FieldMeta recordMeta =
                new com.schemarise.alfa.runtime.FieldMeta(
                        java.util.Optional.empty(),
                        java.util.Optional.empty(),
                        java.util.Optional.empty(),
                        java.util.Optional.empty(),
                        _recordType,
                        FIELD_RECORD,
                        java.util.Optional.empty());
        public com.schemarise.alfa.runtime.FieldMeta _enumMeta =
                new com.schemarise.alfa.runtime.FieldMeta(
                        java.util.Optional.empty(),
                        java.util.Optional.empty(),
                        java.util.Optional.empty(),
                        java.util.Optional.empty(),
                        _enumType,
                        FIELD_ENUM,
                        java.util.Optional.empty());
        public com.schemarise.alfa.runtime.FieldMeta udtMeta =
                new com.schemarise.alfa.runtime.FieldMeta(
                        java.util.Optional.empty(),
                        java.util.Optional.empty(),
                        java.util.Optional.empty(),
                        java.util.Optional.empty(),
                        _udtType,
                        FIELD_UDT,
                        java.util.Optional.empty());
        public com.schemarise.alfa.runtime.FieldMeta serviceMeta =
                new com.schemarise.alfa.runtime.FieldMeta(
                        java.util.Optional.empty(),
                        java.util.Optional.empty(),
                        java.util.Optional.empty(),
                        java.util.Optional.empty(),
                        _serviceType,
                        FIELD_SERVICE,
                        java.util.Optional.empty());
        public com.schemarise.alfa.runtime.FieldMeta annotationMeta =
                new com.schemarise.alfa.runtime.FieldMeta(
                        java.util.Optional.empty(),
                        java.util.Optional.empty(),
                        java.util.Optional.empty(),
                        java.util.Optional.empty(),
                        _annotationType,
                        FIELD_ANNOTATION,
                        java.util.Optional.empty());
        public com.schemarise.alfa.runtime.FieldMeta entityNameMeta =
                new com.schemarise.alfa.runtime.FieldMeta(
                        java.util.Optional.empty(),
                        java.util.Optional.empty(),
                        java.util.Optional.empty(),
                        java.util.Optional.empty(),
                        _entityNameType,
                        FIELD_ENTITYNAME,
                        java.util.Optional.empty());
        public com.schemarise.alfa.runtime.FieldMeta keyNameMeta =
                new com.schemarise.alfa.runtime.FieldMeta(
                        java.util.Optional.empty(),
                        java.util.Optional.empty(),
                        java.util.Optional.empty(),
                        java.util.Optional.empty(),
                        _keyNameType,
                        FIELD_KEYNAME,
                        java.util.Optional.empty());
        public com.schemarise.alfa.runtime.FieldMeta traitNameMeta =
                new com.schemarise.alfa.runtime.FieldMeta(
                        java.util.Optional.empty(),
                        java.util.Optional.empty(),
                        java.util.Optional.empty(),
                        java.util.Optional.empty(),
                        _traitNameType,
                        FIELD_TRAITNAME,
                        java.util.Optional.empty());
        public com.schemarise.alfa.runtime.FieldMeta unionNameMeta =
                new com.schemarise.alfa.runtime.FieldMeta(
                        java.util.Optional.empty(),
                        java.util.Optional.empty(),
                        java.util.Optional.empty(),
                        java.util.Optional.empty(),
                        _unionNameType,
                        FIELD_UNIONNAME,
                        java.util.Optional.empty());
        public com.schemarise.alfa.runtime.FieldMeta recordNameMeta =
                new com.schemarise.alfa.runtime.FieldMeta(
                        java.util.Optional.empty(),
                        java.util.Optional.empty(),
                        java.util.Optional.empty(),
                        java.util.Optional.empty(),
                        _recordNameType,
                        FIELD_RECORDNAME,
                        java.util.Optional.empty());
        public com.schemarise.alfa.runtime.FieldMeta enumNameMeta =
                new com.schemarise.alfa.runtime.FieldMeta(
                        java.util.Optional.empty(),
                        java.util.Optional.empty(),
                        java.util.Optional.empty(),
                        java.util.Optional.empty(),
                        _enumNameType,
                        FIELD_ENUMNAME,
                        java.util.Optional.empty());
        public com.schemarise.alfa.runtime.FieldMeta udtNameMeta =
                new com.schemarise.alfa.runtime.FieldMeta(
                        java.util.Optional.empty(),
                        java.util.Optional.empty(),
                        java.util.Optional.empty(),
                        java.util.Optional.empty(),
                        _udtNameType,
                        FIELD_UDTNAME,
                        java.util.Optional.empty());
        public com.schemarise.alfa.runtime.FieldMeta serviceNameMeta =
                new com.schemarise.alfa.runtime.FieldMeta(
                        java.util.Optional.empty(),
                        java.util.Optional.empty(),
                        java.util.Optional.empty(),
                        java.util.Optional.empty(),
                        _serviceNameType,
                        FIELD_SERVICENAME,
                        java.util.Optional.empty());
        public com.schemarise.alfa.runtime.FieldMeta fieldNameMeta =
                new com.schemarise.alfa.runtime.FieldMeta(
                        java.util.Optional.empty(),
                        java.util.Optional.empty(),
                        java.util.Optional.empty(),
                        java.util.Optional.empty(),
                        _fieldNameType,
                        FIELD_FIELDNAME,
                        java.util.Optional.empty());

        @Override
        public boolean hasBuilder() {
            return false;
        }

        @Override
        public boolean convertableToBuilder() {
            return false;
        }

        @Override
        public com.schemarise.alfa.runtime.Builder builder() {
            throw new UnsupportedOperationException();
        }

        @Override
        public com.schemarise.alfa.runtime.Builder builder(com.schemarise.alfa.runtime.IBuilderConfig cc) {
            throw new UnsupportedOperationException();
        }

        public MetaTypeDescriptor() {
            super.init();
        }

        protected java.util.Map<java.lang.String, schemarise.alfa.runtime.model.Assert> _asserts_ =
                java.util.Collections.unmodifiableMap(
                        new java.util.LinkedHashMap() {
                            {
                            }
                        });

        protected java.util.Map<java.lang.String, com.schemarise.alfa.runtime.FieldMeta<MetaType>>
                _fieldsMeta_ =
                        java.util.Collections.unmodifiableMap(
                                new java.util.LinkedHashMap() {
                                    {
                                        put(FIELD_ENTITY, entityMeta);
                                        put(FIELD_KEY, keyMeta);
                                        put(FIELD_TRAIT, traitMeta);
                                        put(FIELD_UNION, unionMeta);
                                        put(FIELD_RECORD, recordMeta);
                                        put(FIELD_ENUM, _enumMeta);
                                        put(FIELD_UDT, udtMeta);
                                        put(FIELD_SERVICE, serviceMeta);
                                        put(FIELD_ANNOTATION, annotationMeta);
                                        put(FIELD_ENTITYNAME, entityNameMeta);
                                        put(FIELD_KEYNAME, keyNameMeta);
                                        put(FIELD_TRAITNAME, traitNameMeta);
                                        put(FIELD_UNIONNAME, unionNameMeta);
                                        put(FIELD_RECORDNAME, recordNameMeta);
                                        put(FIELD_ENUMNAME, enumNameMeta);
                                        put(FIELD_UDTNAME, udtNameMeta);
                                        put(FIELD_SERVICENAME, serviceNameMeta);
                                        put(FIELD_FIELDNAME, fieldNameMeta);
                                    }
                                });

        @Override
        public schemarise.alfa.runtime.model.UdtDataType getUdtDataType() {
            return _asUdtType_;
        }

        @Override
        public java.util.Map<java.lang.String, schemarise.alfa.runtime.model.Assert> getAsserts() {
            return _asserts_;
        }

        @Override
        public java.util.Map<java.lang.String, com.schemarise.alfa.runtime.FieldMeta<MetaType>>
                getAllFieldsMeta() {
            return _fieldsMeta_;
        }

        @Override
        /** Not applicable - this is not an entity or a key directly linked to an entity */
        public java.util.Optional<com.schemarise.alfa.runtime.TypeDescriptor> getEntityKeyModel() {
            return java.util.Optional.empty();
        }

        @Override
        public java.lang.String fieldIdName(int id) {
            switch (id) {
                case FIELD_ID_ENTITY:
                    return FIELD_ENTITY;
                case FIELD_ID_KEY:
                    return FIELD_KEY;
                case FIELD_ID_TRAIT:
                    return FIELD_TRAIT;
                case FIELD_ID_UNION:
                    return FIELD_UNION;
                case FIELD_ID_RECORD:
                    return FIELD_RECORD;
                case FIELD_ID_ENUM:
                    return FIELD_ENUM;
                case FIELD_ID_UDT:
                    return FIELD_UDT;
                case FIELD_ID_SERVICE:
                    return FIELD_SERVICE;
                case FIELD_ID_ANNOTATION:
                    return FIELD_ANNOTATION;
                case FIELD_ID_ENTITYNAME:
                    return FIELD_ENTITYNAME;
                case FIELD_ID_KEYNAME:
                    return FIELD_KEYNAME;
                case FIELD_ID_TRAITNAME:
                    return FIELD_TRAITNAME;
                case FIELD_ID_UNIONNAME:
                    return FIELD_UNIONNAME;
                case FIELD_ID_RECORDNAME:
                    return FIELD_RECORDNAME;
                case FIELD_ID_ENUMNAME:
                    return FIELD_ENUMNAME;
                case FIELD_ID_UDTNAME:
                    return FIELD_UDTNAME;
                case FIELD_ID_SERVICENAME:
                    return FIELD_SERVICENAME;
                case FIELD_ID_FIELDNAME:
                    return FIELD_FIELDNAME;
                default:
                    throw new com.schemarise.alfa.runtime.AlfaRuntimeException("Unknown field id " + id);
            }
        }

        public boolean hasAbstractTypeFieldsInClosure() {
            return false;
        }

        public java.util.Set<java.lang.String> getImmediateDescendants() {
            return java.util.Collections.emptySet();
        }

        public java.util.Optional<
                        java.util.Map<java.lang.String, schemarise.alfa.runtime.model.Expression>>
                getAnnotations() {
            return java.util.Optional.empty();
        }

        public java.util.Set<schemarise.alfa.runtime.model.ModifierType> getModifiers() {
            return new java.util.HashSet<schemarise.alfa.runtime.model.ModifierType>() {
                {
                }
            };
        }

        public java.lang.String getChecksum() {
            /*
            schemarise.alfa.runtime.model.MetaType{Entity,Key,Trait,Union,Record,Enum,Udt,Service,Annotation,EntityName,KeyName,TraitName,UnionName,RecordName,EnumName,UdtName,ServiceName,FieldName}
            schemarise.alfa.runtime.model.MetaType{Entity,Key,Trait,Union,Record,Enum,Udt,Service,Annotation,EntityName,KeyName,TraitName,UnionName,RecordName,EnumName,UdtName,ServiceName,FieldName}
            */
            return "c1528e8d:";
        }
    }
    // </editor-fold>
}
