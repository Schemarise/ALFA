// *********************************************************************************************************
//      DO NOT EDIT. This file has been generated by the Schemarise Alfa toolset. See
// www.schemarise.com
// *********************************************************************************************************
package schemarise.alfa.test;

@javax.annotation.Generated("com.schemarise.alfa.generators.exporters.java.Java8Exporter")
public interface Scenario extends com.schemarise.alfa.runtime.Service {
    boolean failsOn(
            String _description,
            java.util.function.Supplier<Object> _testBody,
            String _expectedErrorFieldPath);

    < T extends com.schemarise.alfa.runtime.AlfaObject> java.util.List<T> loadObjectsFromCsv(
            String _typeName,
            String _pathOrUrl,
            int _headerLineNo,
            String _colDelimiter);

    boolean failsWith(
            String _description,
            java.util.function.Supplier<Object> _testBody,
            String _expectedErrorMessage);

    < T extends com.schemarise.alfa.runtime.AlfaObject> T loadObjectFromJSON(
            String _typeName, String _pathOrUrl);

    < T extends com.schemarise.alfa.runtime.AlfaObject> T loadObjectFromCsv(
            String _typeName, String _pathOrUrl);

    void given(String _description, com.schemarise.alfa.runtime.Entity _data);

    java.util.List<String> listFiles(String _pathOrUrl, String _ext);

    < T extends com.schemarise.alfa.runtime.AlfaObject> T copyWith(
            com.schemarise.alfa.runtime.AlfaObject _toCopy,
            com.schemarise.alfa.runtime.AlfaObject _toOverride);

    void assertTrue(
            String _description,
            java.util.function.Supplier<Boolean> _testBody);

    < T extends com.schemarise.alfa.runtime.AlfaObject> T random(String _typeName);

    boolean fails(
            String _description, java.util.function.Supplier<Object> _testBody);

    void withServiceResults(
            String _description,
            com.schemarise.alfa.runtime.Service _srv,
            java.util.Map<String, java.util.List<String>> _results);

    < T extends com.schemarise.alfa.runtime.AlfaObject> T randomWith(com.schemarise.alfa.runtime.AlfaObject _builderObject);

    boolean succeeds(
            String _description, java.util.function.Supplier<Object> _testBody);

    public interface Factory extends com.schemarise.alfa.runtime.ServiceFactory {
        public Scenario create();
    }

    // <editor-fold defaultstate="collapsed" desc="TypeDescriptor class">
    // </editor-fold>
}
