# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - uses: whelk-io/maven-settings-xml-action@v22
      with:
        repositories: >
          [
            {
                "id": "github",
                "url": "https://maven.pkg.github.com/Schemarise/alfa-open-core"
            }
          ]
        servers: >
          [
            {
              "id":"github",
              "username":"${{ github.actor }}",
              "password":"${{ secrets.GITHUB_TOKEN }}"
            }
          ]
    - name: Publish package
      run: mvn --batch-mode -e deploy
      env: 
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


    # - name: Build with Maven
    #   # run: mvn -B package --file pom.xml
    #   run: mvn -s settings.xml --file pom.xml --batch-mode --update-snapshots deploy

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

    # - name: Deploy Snapshot with Maven
    #   run: mvn -s settings.xml --batch-mode --update-snapshots deploy
